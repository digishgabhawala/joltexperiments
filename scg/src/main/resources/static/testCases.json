[
  {
    "description": "reset customers",
    "method": "GET",
    "endpoint": "/customers/reset",
    "validate": "Array.isArray(response)"
  },
  {
    "description": "reset accounts",
    "method": "GET",
    "endpoint": "/accounts/reset",
    "validate": "Array.isArray(response)"
  },
  {
    "description": "Create a new customer with provided details",
    "method": "POST",
    "endpoint": "/bff/customers",
    "body": {
      "firstName": "John",
      "lastName": "Doe",
      "email": "johndoe@example.com"
    },
    "validate": "typeof response === 'object' && response.id && response.firstName === 'John' && response.lastName === 'Doe' && response.email === 'johndoe@example.com'"
  },
  {
    "description": "Update customer with provided details",
    "method": "PUT",
    "endpoint": "/bff/customers",
    "body": {
      "id": 1,
      "firstName": "John",
      "lastName": "Doe",
      "email": "johndoeupdated@example.com"
    },
    "validate": "typeof response === 'object' && response.id && response.firstName === 'John' && response.lastName === 'Doe' && response.email === 'johndoeupdated@example.com'"
  },
  {
    "description": "Update customer back to earlier details",
    "method": "PUT",
    "endpoint": "/bff/customers",
    "body": {
      "id": 1,
      "firstName": "John",
      "lastName": "Doe",
      "email": "johndoe@example.com"
    },
    "validate": "typeof response === 'object' && response.id && response.firstName === 'John' && response.lastName === 'Doe' && response.email === 'johndoe@example.com'"
  },
  {
    "description": "create account with body transformation",
    "method": "POST",
    "endpoint": "/bff/createAccount1",
    "body": {
      "accountNo": "54321",
      "typeOfAcc": "checking",
      "bal": 2000,
      "custId": 1
    },
    "validate": "typeof response === 'object' && response.id && response.accountNumber === '54321' && response.accountType === 'checking' && response.balance === 2000 && response.customerId === 1"
  },
  {
    "description": "Create a second customer with provided details",
    "method": "POST",
    "endpoint": "/bff/customers",
    "body": {
      "firstName": "John",
      "lastName": "Doe",
      "email": "johndoe@example.com"
    },
    "validate": "typeof response === 'object' && response.id && response.firstName === 'John' && response.lastName === 'Doe' && response.email === 'johndoe@example.com'"
  },
  {
    "description": "create second account",
    "method": "POST",
    "endpoint": "/bff/createAccount1",
    "body": {
      "accountNo": "54321",
      "typeOfAcc": "checking",
      "bal": 2000,
      "custId": 2
    },
    "validate": "typeof response === 'object' && response.id && response.accountNumber === '54321' && response.accountType === 'checking' && response.balance === 2000 && response.customerId === 2"
  },
  {
    "description": "Retrieve list of all customers",
    "method": "GET",
    "endpoint": "/bff/customers",
    "validate": "Array.isArray(response)"
  },
  {
    "description": "Retrieve details of a single customer by ID",
    "method": "GET",
    "endpoint": "/bff/customers/1",
    "validate": "typeof response === 'object' && response.id === 1"
  },
  {
    "description": "Retrieve list of all accounts",
    "method": "GET",
    "endpoint": "/bff/accounts",
    "validate": "Array.isArray(response) && response.every(account => account.id && account.accountNumber && account.accountType && account.balance !== undefined && account.customerId)"
  },
  {
    "description": "Retrive account based on accountId and then based on customerId, lookup customer as well",
    "method": "GET",
    "endpoint": "/bff/customersAndAccounts/1",
    "validate": "response.callCustomerApi && response.callAccountApi && response.callAccountApi.accountNumber && response.callAccountApi.accountType  && response.callAccountApi.balance && response.callAccountApi.customerId "
  },
  {
    "description": "Create customer with body transformation and nested structure",
    "method": "POST",
    "endpoint": "/bff/customers1",
    "body": {
      "first_name": "Jane",
      "last_name": "Smith",
      "email":  "jane.smith@example.com"
    },
    "validate": "typeof response === 'object' && response.id && response.firstName === 'Jane' && response.lastName === 'Smith' && response.email === 'jane.smith@example.com'"
  },
  {
    "description": "Create customer and account details in a single request",
    "method": "POST",
    "endpoint": "/bff/customers-and-accounts",
    "body": {
      "customer": {
        "first_name": "Alice",
        "last_name": "Wonder",
        "email": {
          "address": "alice@example.com"
        }
      },
      "account": {
        "accountNo": "789456",
        "typeOfAcc": "savings",
        "bal": 500,
        "custId": 7
      }
    },
    "validate": "typeof response === 'object' && response.createCustomer.id && response.createCustomer.firstName === 'Alice' && response.createCustomer.lastName === 'Wonder' && response.createCustomer.email === 'alice@example.com' && response.createAccount.id && response.createAccount.accountNumber === '789456' && response.createAccount.accountType === 'savings' && response.createAccount.balance === 500 "
  },
  {
    "description": "Retrieve linked customer and account details by account ID",
    "method": "GET",
    "endpoint": "/bff/customersAndAccounts/1",
    "validate": "typeof response === 'object' && response.callCustomerApi && response.callAccountApi && response.callCustomerApi.id === response.callAccountApi.customerId"
  },
  {
    "description": "Retrieve both customer and account by passing path params",
    "method": "GET",
    "endpoint": "/bff/customersAndAccounts/1/1",
    "validate": "typeof response === 'object' && response.callCustomerApi && response.callAccountApi && response.callCustomerApi.id === 1  && response.callAccountApi.id === 1"
  },
  {
    "description": "Retrieve both customer and account by passing post request body",
    "method": "POST",
    "endpoint": "/bff/getCustomersAndAccounts",
    "body": {
      "accountNumber": "1",
      "customerId": "2"
    },
    "validate": "typeof response === 'object' && response.callCustomerApi && response.callAccountApi && response.callCustomerApi.id === 2  && response.callAccountApi.id === 1"
  },
  {
    "description": "create a customer with hidden ID and additional attribute",
    "method": "POST",
    "endpoint": "/bff/customersWithHiddenId",
    "body": {
      "first_name": "abs",
      "last_name": "xyz",
      "email": {
        "address":"abs.zyz@gmail.com"
      }
    },
    "validate": "typeof response === 'object' && response.createCustomer && response.createCustomer.idHidden === 'true'  && response.id === undefined"
  },
  {
    "description": "Create a new customer with similar details and only email diff",
    "method": "POST",
    "endpoint": "/bff/customers",
    "body": {
      "firstName": "John",
      "lastName": "Doe",
      "email": "johndoe1@example.com"
    },
    "validate": "typeof response === 'object' && response.id && response.firstName === 'John' && response.lastName === 'Doe' && response.email === 'johndoe1@example.com'"
  },
  {
    "description": "search customer with headers",
    "method": "GET",
    "endpoint": "/bff/searchCustomers?customerName=John",
    "validate": "Array.isArray(response) && response.length === 3"
  },
  {
    "description": "search customer with headers and email 1",
    "method": "GET",
    "endpoint": "/bff/searchCustomers?customerName=John&email=johndoe1@example.com",
    "validate": "Array.isArray(response) && response.length === 1"
  },
  {
    "description": "search customer with headers and email 2",
    "method": "GET",
    "endpoint": "/bff/searchCustomers?customerName=John&email=johndoe@example.com",
    "validate": "Array.isArray(response) && response.length === 2"
  },
  {
    "description": "Create a new account based on search results of customer. With 2 existing customers",
    "method": "POST",
    "endpoint": "/bff/searchAndCreateAccount",
    "body": {
      "customer": {
        "first_name": "John",
        "last_name": "Doe",
        "email": {
          "address": "johndoe@example.com"
        }
      },
      "account": {
        "accountNo": "1234567890",
        "typeOfAcc": "savings",
        "bal": 1000.50
      }
    },
    "validate": "typeof response === 'object' && response.createAccount.id && response.createAccount.accountNumber === '1234567890' && response.createAccount.accountType === 'savings' && response.createAccount.balance === 1000.50 "

  },
  {
    "description": "Create a new account based on search results of customer. With single existing customer",
    "method": "POST",
    "endpoint": "/bff/searchAndCreateAccount",
    "body": {
      "customer": {
        "first_name": "John",
        "last_name": "Doe",
        "email": {
          "address": "johndoe1@example.com"
        }
      },
      "account": {
        "accountNo": "1234567890",
        "typeOfAcc": "savings",
        "bal": 1000.50
      }
    },
    "validate": "typeof response === 'object' && response.createAccount.id && response.createAccount.accountNumber === '1234567890' && response.createAccount.accountType === 'savings' && response.createAccount.balance === 1000.50 "

  },
  {
    "description": "Create a new account based on search results of customer. With new customer",
    "method": "POST",
    "endpoint": "/bff/searchAndCreateAccount",
    "body": {
      "customer": {
        "first_name": "John2",
        "last_name": "Doe",
        "email": {
          "address": "johndoe1@example.com"
        }
      },
      "account": {
        "accountNo": "1234567890",
        "typeOfAcc": "savings",
        "bal": 1000.50
      }
    },
    "validate": "typeof response === 'object' && response.createAccount.id && response.createAccount.customerId &&response.createAccount.accountNumber === '1234567890' && response.createAccount.accountType === 'savings' && response.createAccount.balance === 1000.50 "

  },
  {
    "description": "Get financial balance of customer, search customer based on name and email. get all accounts and filter for related accounts. get balances from all filtered accounts and sum it up.",
    "method": "POST",
    "endpoint": "/bff/financialSummary",
    "body": {
      "customer": {
        "name": "John",
        "email": "johndoe@example.com"
      }
    },
    "validate": "typeof response === 'object' && response.filterAccountsByCustomerId && Array.isArray(response.filterAccountsByCustomerId) && response.filterAccountsByCustomerId.length === 3 && response.totalBalance &&  response.totalBalance === 5000.5"
  },
  {
    "description": "test operate step and see index is increasing by 1",
    "method": "GET",
    "endpoint": "/bff/seeIndexIncreasing",
    "validate": "typeof response === 'object' && response.loopProcessingIndex === 1"
  },
  {
    "description": "test operate step and see index is increasing by 2",
    "method": "GET",
    "endpoint": "/bff/seeIndexIncreasingby2",
    "validate": "typeof response === 'object' && response.loopProcessingIndex === 3"
  },
  {
    "description": "increase a loop index and get element from that index",
    "method": "GET",
    "endpoint": "/bff/retrieveCustomerBasedonIndex",
    "validate": "typeof response === 'object' && response.loopProcessingIndex === 1 && response.finalResult[0].id === 2"
  },
  {
    "description": "get a customer, increase a loop index and get another customer from that index",
    "method": "GET",
    "endpoint": "/bff/retrieve2CustomersBasedonIndex",
    "validate": "typeof response === 'object' && response.loopProcessingIndex === 1 && response.finalResult[0].id === 1 && response.finalResult[1].id === 2"
  },
  {
    "description": "initialize variables, get a customer from list, update attribute inside customer, return",
    "method": "GET",
    "endpoint": "/bff/updateCustomerName",
    "validate": "typeof response === 'object' && response.finalResult[0].firstName === 'John_new'"
  },
  {
    "description": "test for loop and update name of all customers",
    "method": "GET",
    "endpoint": "/bff/updateAllCustomers",
    "validate": "typeof response === 'object' && Array.isArray(response.finalResult) && response.finalResult.length === 9 && response.finalResult[0].firstName === 'John_new'"
  }



]
